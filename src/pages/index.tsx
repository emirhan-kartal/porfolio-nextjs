import Head from "next/head";
import { Inter } from "next/font/google";
import LandingIntro from "@/components/composites/landing-intro";
import GradientColon from "@/components/ui/gradient-colon";

import {
    GetStaticProps,
    GetStaticPropsContext,
    GetStaticPropsResult,
} from "next";
import dynamic from "next/dynamic";
import LazyLoad from "@/components/utils/LazyLoad";
import { getDatabase } from "@/lib/db";
import { Skill, Project } from "@/types";

const DynamicFeaturedProjects = dynamic(
    import("@/components/composites/featured-projects")
);
const DynamicLandingAbout = dynamic(
    import("@/components/composites/landing-about"),
    { ssr: false }
);
const inter = Inter({ subsets: ["latin"] });

interface HomePageProps {
    whatIdo: Skill[];
    projects: Project[];
    messages: Record<string, string>;
}
7;
export default function Home({ whatIdo, projects }: HomePageProps) {
    return (
        <>
            <Head>
                <title>Emirhan Kartal</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                
                <LandingIntro />
                <GradientColon />

                <LazyLoad>
                    <DynamicFeaturedProjects projects={projects} />
                </LazyLoad>
                <LazyLoad>
                    <DynamicLandingAbout whatIdo={whatIdo} />
                </LazyLoad>
            </main>
        </>
    );
}
export const getStaticProps: GetStaticProps<HomePageProps> = async (
    ctx: GetStaticPropsContext
): Promise<GetStaticPropsResult<HomePageProps>> => {
    const mongo = await getDatabase();
    const whatIdo = (await mongo.collection("skills").find().toArray()).map(
        (skill) => {
            return {
                title: skill.name,
                image: skill.image,
            } as Skill;
        }
    ) as Skill[];
    console.log("this is whatIdo", whatIdo);
    const projects = (
        await mongo.collection("projects").find({ limit: 2 }).toArray()
    ).map((project) => {
        ctx.locales?.forEach((locale) => {
            project[locale as "tr" | "en"] = {
                title: project[locale as "tr" | "en"].title,
                description: project[locale as "tr" | "en"].description,
                tags: project[locale as "tr" | "en"].tags,
                thumbnail: project[locale as "tr" | "en"].thumbnail,
            };
        });
        return {
            _id: project._id.toString(),
            date: project.date,
            thumbnail: project.thumbnail,
            tr: project.tr,
            en: project.en,
        } as Project;
    }) as Project[];

    return {
        props: {
            whatIdo,
            projects,
            messages: (await import(`../../messages/${ctx.locale}.json`))
                .default,
        },
    };
};
